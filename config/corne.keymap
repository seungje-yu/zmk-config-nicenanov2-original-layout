/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip {
    chain-length = <27>;

    // 21 backlight + 6 glowlight
};

/ {
    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            hold-trigger-key-positions = <13 14 16 15 19 20 21 22>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q            &kp W            &kp E              &kp R                &kp T          &kp Y      &kp U                &kp I              &kp O            &kp P               &kp BSPC
&kp LCTRL  &hml LEFT_GUI A  &hml LEFT_ALT S  &hml LEFT_SHIFT D  &hml LEFT_CONTROL F  &kp G          &kp H      &hml LEFT_CONTROL J  &hml LEFT_SHIFT K  &hml LEFT_ALT L  &hml LEFT_WIN SEMI  &kp SQT
&kp LSHFT  &kp Z            &kp X            &kp C              &kp V                &kp B          &kp N      &kp M                &kp COMMA          &kp DOT          &kp FSLH            &kp LEFT_ALT
                                             &kp LGUI           &mo 1                &lt 3 ENTER    &kp SPACE  &mo 2                &kp RIGHT_ALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB           &kp N1   &kp N2         &kp N3        &kp N4      &kp N5       &kp N6          &kp N7     &kp N8          &kp N9           &kp N0    &kp BSPC
&kp LEFT_CONTROL  &kp ESC  &kp BACKSPACE  &kp LEFT_ALT  &kp INSERT  &kp SPACE    &kp UNDERSCORE  &kp PLUS   &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp PIPE  &kp TILDE
&kp LSHFT         &trans   &trans         &trans        &kp DELETE  &kp CLCK     &kp MINUS       &kp EQUAL  &kp LBKT        &kp RBKT         &kp BSLH  &kp GRAVE
                                          &none         &none       &kp ENTER    &kp SPACE       &none      &kp LEFT_ALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp F1   &kp F2   &kp F3    &kp F4        &kp F5       &kp F6             &kp F7    &kp F8        &kp F9     &kp F10  &kp BSPC
&kp LCTRL  &kp F11  &kp F12  &none     &none         &none        &kp LEFT           &kp DOWN  &kp UP_ARROW  &kp RIGHT  &none    &none
&kp LSHFT  &none    &none    &trans    &trans        &trans       &kp RIGHT_CONTROL  &kp HOME  &kp END       &none      &none    &none
                             &kp LGUI  &kp LEFT_ALT  &kp ENTER    &none              &trans    &none
            >;
        };

        layer_3 {
            bindings = <
&ext_power EP_ON  &ext_power EP_OFF  &ext_power EP_TOG  &trans        &trans        &trans          &trans     &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &trans  &kp KP_NUMLOCK
&bt BT_CLR_ALL    &bt BT_SEL 0       &bt BT_SEL 1       &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans     &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &trans  &trans
&rgb_ug RGB_TOG   &rgb_ug RGB_EFF    &trans             &trans        &trans        &trans          &trans     &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &trans  &trans
                                                        &trans        &trans        &kp ENTER       &kp SPACE  &kp KP_NUMBER_0  &trans
            >;
        };
    };
};
